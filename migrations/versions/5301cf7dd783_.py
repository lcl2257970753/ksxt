"""empty message

Revision ID: 5301cf7dd783
Revises: 
Create Date: 2020-04-16 17:52:00.403617

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5301cf7dd783'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rolename', sa.String(length=100), nullable=True),
    sa.Column('state', sa.Integer(), nullable=True),
    sa.Column('detail', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sysmenu',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('path', sa.String(length=100), nullable=True),
    sa.Column('menustr', sa.String(length=100), nullable=True),
    sa.Column('icon', sa.String(length=100), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('state', sa.Integer(), nullable=True),
    sa.Column('rank', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('menu_role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('mid', sa.Integer(), nullable=True),
    sa.Column('rid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['mid'], ['sysmenu.id'], ),
    sa.ForeignKeyConstraint(['rid'], ['role.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=True),
    sa.Column('pwd', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('phone', sa.String(length=11), nullable=True),
    sa.Column('info', sa.Text(), nullable=True),
    sa.Column('face', sa.String(length=255), nullable=True),
    sa.Column('addtime', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone')
    )
    op.create_index(op.f('ix_user_addtime'), 'user', ['addtime'], unique=False)
    op.create_table('friends',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('self_id', sa.Integer(), nullable=True),
    sa.Column('friend_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['friend_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['self_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('loginlog',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('ip', sa.String(length=100), nullable=True),
    sa.Column('addtime', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_loginlog_addtime'), 'loginlog', ['addtime'], unique=False)
    op.create_table('message',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('to_user', sa.Integer(), nullable=True),
    sa.Column('from_user', sa.Integer(), nullable=True),
    sa.Column('context', sa.String(length=1024), nullable=True),
    sa.Column('is_read', sa.Integer(), nullable=True),
    sa.Column('addtime', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['from_user'], ['user.id'], ),
    sa.ForeignKeyConstraint(['to_user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_message_addtime'), 'message', ['addtime'], unique=False)
    op.create_table('oplog',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('ip', sa.String(length=100), nullable=True),
    sa.Column('reason', sa.String(length=600), nullable=True),
    sa.Column('addtime', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_oplog_addtime'), 'oplog', ['addtime'], unique=False)
    op.create_table('question_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('desc', sa.String(length=100), nullable=True),
    sa.Column('is_public', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('test',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('test_name', sa.String(length=100), nullable=True),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.Column('state', sa.Integer(), nullable=True),
    sa.Column('is_public', sa.Integer(), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('addtime', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_test_addtime'), 'test', ['addtime'], unique=False)
    op.create_table('examination',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('to_user', sa.Integer(), nullable=True),
    sa.Column('from_user', sa.Integer(), nullable=True),
    sa.Column('test_id', sa.Integer(), nullable=True),
    sa.Column('time', sa.Integer(), nullable=True),
    sa.Column('startTime', sa.Date(), nullable=True),
    sa.Column('endTime', sa.Date(), nullable=True),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.Column('is_join', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['from_user'], ['user.id'], ),
    sa.ForeignKeyConstraint(['test_id'], ['test.id'], ),
    sa.ForeignKeyConstraint(['to_user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_examination_endTime'), 'examination', ['endTime'], unique=False)
    op.create_index(op.f('ix_examination_startTime'), 'examination', ['startTime'], unique=False)
    op.create_table('examination_result',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('unique_id', sa.String(length=20), nullable=True),
    sa.Column('to_user', sa.Integer(), nullable=True),
    sa.Column('from_user', sa.Integer(), nullable=True),
    sa.Column('test_name', sa.Integer(), nullable=True),
    sa.Column('time', sa.Integer(), nullable=True),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['from_user'], ['user.id'], ),
    sa.ForeignKeyConstraint(['test_name'], ['test.id'], ),
    sa.ForeignKeyConstraint(['to_user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('question',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('context', sa.String(length=1024), nullable=True),
    sa.Column('op_a', sa.String(length=1024), nullable=True),
    sa.Column('op_b', sa.String(length=1024), nullable=True),
    sa.Column('op_c', sa.String(length=1024), nullable=True),
    sa.Column('op_d', sa.String(length=1024), nullable=True),
    sa.Column('answer', sa.String(length=1024), nullable=True),
    sa.Column('state', sa.Integer(), nullable=True),
    sa.Column('is_public', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.Integer(), nullable=True),
    sa.Column('analysis', sa.String(length=1024), nullable=True),
    sa.Column('difficult', sa.String(length=10), nullable=True),
    sa.ForeignKeyConstraint(['type'], ['question_type.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('examinationdetail',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('unique_id', sa.String(length=20), nullable=True),
    sa.Column('test_id', sa.Integer(), nullable=True),
    sa.Column('question_id', sa.Integer(), nullable=True),
    sa.Column('answer', sa.String(length=100), nullable=True),
    sa.Column('answer_post', sa.String(length=100), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.Column('is_true', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], ),
    sa.ForeignKeyConstraint(['test_id'], ['test.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('test_detail',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('test_id', sa.Integer(), nullable=True),
    sa.Column('question_id', sa.Integer(), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], ),
    sa.ForeignKeyConstraint(['test_id'], ['test.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('test_detail')
    op.drop_table('examinationdetail')
    op.drop_table('question')
    op.drop_table('examination_result')
    op.drop_index(op.f('ix_examination_startTime'), table_name='examination')
    op.drop_index(op.f('ix_examination_endTime'), table_name='examination')
    op.drop_table('examination')
    op.drop_index(op.f('ix_test_addtime'), table_name='test')
    op.drop_table('test')
    op.drop_table('question_type')
    op.drop_index(op.f('ix_oplog_addtime'), table_name='oplog')
    op.drop_table('oplog')
    op.drop_index(op.f('ix_message_addtime'), table_name='message')
    op.drop_table('message')
    op.drop_index(op.f('ix_loginlog_addtime'), table_name='loginlog')
    op.drop_table('loginlog')
    op.drop_table('friends')
    op.drop_index(op.f('ix_user_addtime'), table_name='user')
    op.drop_table('user')
    op.drop_table('menu_role')
    op.drop_table('sysmenu')
    op.drop_table('role')
    # ### end Alembic commands ###
